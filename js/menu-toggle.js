/**
 * @file
 * Handles the accessible navigation menu, including the mobile hamburger toggle
 * and submenu accordions.
 *
 * This script is designed to work with the markup generated by
 * templates/block/block--system-menu-block.html.twig and
 * templates/navigation/menu.html.twig.
 */
((Drupal) => {
  'use strict';

  /**
   * Initializes the main navigation menu behavior.
   *
   * @type {Drupal.behavior}
   */
  Drupal.behaviors.groundworkNavigation = {
    attach: function (context, settings) {
      // Process each horizontal menu found on the page.
      const navBlocks = context.querySelectorAll('.menu--horizontal');
      if (!navBlocks.length) {
        return;
      }

      navBlocks.forEach(navBlock => {
        // --- Main Menu Toggle (Hamburger) ---
        const mainMenuToggleButton = navBlock.querySelector('.gw-menu-toggle');
        if (!mainMenuToggleButton || mainMenuToggleButton.hasAttribute('data-js-initialized')) {
          return; // Already processed
        }

        const controlledMenuId = mainMenuToggleButton.getAttribute('aria-controls');
        const mainMenu = document.getElementById(controlledMenuId);

        if (mainMenu) {
          mainMenuToggleButton.addEventListener('click', () => {
            const isExpanded = mainMenuToggleButton.getAttribute('aria-expanded') === 'true';
            mainMenuToggleButton.setAttribute('aria-expanded', !isExpanded);
            mainMenu.classList.toggle('is-open');
            navBlock.classList.toggle('is-open');
            document.body.classList.toggle('is-menu-open');
          });
        }
        mainMenuToggleButton.setAttribute('data-js-initialized', 'true');


        // --- Submenu Toggles (Accordion on Mobile) ---
        const submenuToggleButtons = navBlock.querySelectorAll('.submenu-toggle');

        submenuToggleButtons.forEach(toggleButton => {
          if (toggleButton.hasAttribute('data-js-initialized')) {
            return;
          }

          toggleButton.addEventListener('click', (e) => {
            const button = e.currentTarget;
            const isExpanded = button.getAttribute('aria-expanded') === 'true';
            const controlledSubmenuId = button.getAttribute('aria-controls');
            const controlledSubmenu = document.getElementById(controlledSubmenuId);

            if (controlledSubmenu) {
              button.setAttribute('aria-expanded', !isExpanded);
              controlledSubmenu.classList.toggle('is-open');
            }
          });

          toggleButton.setAttribute('data-js-initialized', 'true');
        });
      });
    }
  };

})(Drupal);
