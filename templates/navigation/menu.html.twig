{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link URL, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see https://twig.symfony.com/doc/3.x/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0, is_horizontal, menu_name) }}

{% macro menu_links(items, attributes, menu_level, is_horizontal, menu_name) %}
  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 and is_horizontal %}
      {# The main menu UL. ID is set here to be controlled by the hamburger button. #}
      <ul{{ attributes.addClass('menu', 'menu--level-' ~ menu_level).setAttribute('id', 'menu-' ~ menu_name|clean_id) }}>
    {% elseif menu_level == 0 %}
       <ul{{ attributes.addClass('menu', 'menu--level-' ~ menu_level) }}>
    {% else %}
      {# Sub-menu UL. The ID is passed from the parent button's aria-controls. #}
      <ul{{ attributes }}>
    {% endif %}

    {% for item in items %}
      {%
        set classes = [
          'menu-item',
          item.is_expanded ? 'menu-item--expanded',
          item.is_collapsed ? 'menu-item--collapsed',
          item.in_active_trail ? 'menu-item--active-trail',
        ]
      %}
      <li{{ item.attributes.addClass(classes) }}>
        {{ link(item.title, item.url) }}

        {# If this menu item has children, and it's a horizontal menu, create a toggle button. #}
        {% if is_horizontal and item.below %}
          {% set submenu_id = 'submenu-' ~ menu_name|clean_id ~ '-' ~ menu_level ~ '-' ~ loop.index %}
          <button class="submenu-toggle" type="button" aria-expanded="false" aria-controls="{{ submenu_id }}">
            <span class="visually-hidden">{{ 'Toggle submenu for ' ~ item.title }}</span>
            <span class="submenu-toggle__icon" aria-hidden="true"></span>
          </button>
          {# Create a new attributes object for the sub-menu's <ul> to set its ID. #}
          {% set submenu_attributes = create_attribute({ 'id': submenu_id, 'class': ['menu', 'menu--level-' ~ (menu_level + 1)] }) %}
          {{ menus.menu_links(item.below, submenu_attributes, menu_level + 1, is_horizontal, menu_name) }}
        {% elseif item.below %}
            {# Default recursive call for non-horizontal menus #}
            {{ menus.menu_links(item.below, create_attribute({ 'class': ['menu', 'menu--level-' ~ (menu_level + 1)] }), menu_level + 1, is_horizontal, menu_name) }}
        {% endif %}
      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}
