/* ============================================================
  @file       _grid-layout.css
  @description Block Style Component (BSC): Grid layout system (atomic & layout-ready)
               Includes advanced modifiers for enhanced layout control (gated via signature)
  @version    1.3
============================================================ */

/*
  GRID SYSTEM OVERVIEW
  ---------------------
  The Groundwork grid system is a dual-purpose BSC—meaning it functions both as atomic utility and full layout engine.

  ✔ All regions in Groundwork are flexbox-based grid containers (.grid)
  ✔ All blocks are grid cells (.grid-cell)
  ✔ Widths are fully customizable using responsive column classes (e.g. .is-4, .is-6--l)
  ✔ Media-aware modifiers allow different column spans per breakpoint (small, medium, large)
  ✔ Use the Block Styles UI, custom Twig, or programmatic means to assign widths
  ✔ Total columns: 12 (not 24 like Groundwork 7.x)
*/

/* ─── Grid Container ───────────────────────────────────────────────────────── */
.grid,
.grid--with-gutter {
  display: flex;
  flex-direction: row;
  flex: 1;
  flex-wrap: wrap;
}

.grid.grid--center,
.grid--with-gutter.grid--center {
  align-content: center;
}

.grid--with-gutter > .grid-cell {
  padding: var(--grid-gutter);
}

/* ─── Grid Cells ────────────────────────────────────────── */
.grid > .grid-cell,
.grid--with-gutter > .grid-cell{
  flex: 0 0 100%;
}

.grid > .grid-cell.col-auto,
.grid--with-gutter > .grid-cell.col-auto {
  flex-basis: auto;
}

/*
  RESPONSIVE COLUMN WIDTHS
  -------------------------
  The following classes define flex-basis widths based on media queries:
  • Small screen:     .is-X--s       (≤780px)
  • Medium screen:    .is-X          (≥992px)
  • Large screen:     .is-X--l       (≥1200px)

  Semantic Aliases (Readable Shortcuts):
  • .is-half          = .is-6        (50%)
  • .is-quarter       = .is-3        (25%)
  • .is-third         = .is-4        (33.333%)

  These aliases improve clarity and readability in markup while mapping directly
  to their numeric column equivalents. All variants support responsive suffixes:
  • .is-half--s, .is-quarter--l, etc.
*/


/* ─── Column Widths: Small (≤780px) ───────────────────────────────── */
@media (max-width: var(--breakpoint-small-screen)) {
  .grid > .grid-cell.is-1--s,
  .grid--with-gutter > .grid-cell.is-1--s  { flex-basis: 8.33333%; }
  .grid > .grid-cell.is-2--s,
  .grid--with-gutter > .grid-cell.is-2--s  { flex-basis: 16.66667%; }
  .grid > .grid-cell.is-3--s,
  .grid > .grid-cell.is-quarter--s,
  .grid--with-gutter > .grid-cell.is-3--s,
  .grid--with-gutter > .grid-cell.is-quarter--s  { flex-basis: 25%; }
  .grid > .grid-cell.is-4--s,
  .grid > .grid-cell.is-third--s,
  .grid--with-gutter > .grid-cell.is-4--s,
  .grid--with-gutter > .grid-cell.is-third--s  { flex-basis: 33.33333%; }
  .grid > .grid-cell.is-5--s,
  .grid--with-gutter > .grid-cell.is-5--s  { flex-basis: 41.66667%; }
  .grid > .grid-cell.is-6--s,
  .grid > .grid-cell.is-half--s,
  .grid--with-gutter > .grid-cell.is-6--s,
  .grid--with-gutter > .grid-cell.is-half--s  { flex-basis: 50%; }
  .grid > .grid-cell.is-7--s,
  .grid--with-gutter > .grid-cell.is-7--s  { flex-basis: 58.33333%; }
  .grid > .grid-cell.is-8--s,
  .grid--with-gutter > .grid-cell.is-8--s  { flex-basis: 66.66667%; }
  .grid > .grid-cell.is-9--s,
  .grid--with-gutter > .grid-cell.is-9--s  { flex-basis: 75%; }
  .grid > .grid-cell.is-10--s,
  .grid--with-gutter > .grid-cell.is-10--s { flex-basis: 83.33333%; }
  .grid > .grid-cell.is-11--s,
  .grid--with-gutter > .grid-cell.is-11--s { flex-basis: 91.66667%; }
  .grid > .grid-cell.is-12--s,
  .grid--with-gutter > .grid-cell.is-12--s { flex-basis: 100%; }
}

/* ─── Column Widths: Medium (≥992px) ───────────────────────────── */
@media (min-width: var(--breakpoint-medium-screen)) {
  .grid > .grid-cell.is-1,
  .grid--with-gutter > .grid-cell.is-1  { flex-basis: 8.33333%; }
  .grid > .grid-cell.is-2,
  .grid--with-gutter > .grid-cell.is-2  { flex-basis: 16.66667%; }
  .grid > .grid-cell.is-3,
  .grid > .grid-cell.is-quarter,
  .grid--with-gutter > .grid-cell.is-3,
  .grid--with-gutter > .grid-cell.is-quarter  { flex-basis: 25%; }
  .grid > .grid-cell.is-4,
  .grid > .grid-cell.is-third,
  .grid--with-gutter > .grid-cell.is-4,
  .grid--with-gutter > .grid-cell.is-third  { flex-basis: 33.33333%; }
  .grid > .grid-cell.is-5,
  .grid--with-gutter > .grid-cell.is-5  { flex-basis: 41.66667%; }
  .grid > .grid-cell.is-6,
  .grid > .grid-cell.is-half,
  .grid--with-gutter > .grid-cell.is-6,
  .grid--with-gutter > .grid-cell.is-half  { flex-basis: 50%; }
  .grid > .grid-cell.is-7,
  .grid--with-gutter > .grid-cell.is-7  { flex-basis: 58.33333%; }
  .grid > .grid-cell.is-8,
  .grid--with-gutter > .grid-cell.is-8  { flex-basis: 66.66667%; }
  .grid > .grid-cell.is-9,
  .grid--with-gutter > .grid-cell.is-9  { flex-basis: 75%; }
  .grid > .grid-cell.is-10,
  .grid--with-gutter > .grid-cell.is-10 { flex-basis: 83.33333%; }
  .grid > .grid-cell.is-11,
  .grid--with-gutter > .grid-cell.is-11 { flex-basis: 91.66667%; }
  .grid > .grid-cell.is-12,
  .grid--with-gutter > .grid-cell.is-12 { flex-basis: 100%; }
}

/* ─── Column Widths: Large (≥1200px) ──────────────────────────── */
@media (min-width: var(--breakpoint-large-screen)) {
  .grid > .grid-cell.is-1--l,
  .grid--with-gutter > .grid-cell.is-1--l  { flex-basis: 8.33333%; }
  .grid > .grid-cell.is-2--l,
  .grid--with-gutter > .grid-cell.is-2--l  { flex-basis: 16.66667%; }
  .grid > .grid-cell.is-3--l,
  .grid > .grid-cell.is-quarter--l,
  .grid--with-gutter > .grid-cell.is-3--l,
  .grid--with-gutter > .grid-cell.is-quarter--l  { flex-basis: 25%; }
  .grid > .grid-cell.is-4--l,
  .grid > .grid-cell.is-third--l,
  .grid--with-gutter > .grid-cell.is-4--l,
  .grid--with-gutter > .grid-cell.is-third--l  { flex-basis: 33.33333%; }
  .grid > .grid-cell.is-5--l,
  .grid--with-gutter > .grid-cell.is-5--l  { flex-basis: 41.66667%; }
  .grid > .grid-cell.is-6--l,
  .grid > .grid-cell.is-half--l,
  .grid--with-gutter > .grid-cell.is-6--l,
  .grid--with-gutter > .grid-cell.is-half--l  { flex-basis: 50%; }
  .grid > .grid-cell.is-7--l,
  .grid--with-gutter > .grid-cell.is-7--l  { flex-basis: 58.33333%; }
  .grid > .grid-cell.is-8--l,
  .grid--with-gutter > .grid-cell.is-8--l  { flex-basis: 66.66667%; }
  .grid > .grid-cell.is-9--l,
  .grid--with-gutter > .grid-cell.is-9--l  { flex-basis: 75%; }
  .grid > .grid-cell.is-10--l,
  .grid--with-gutter > .grid-cell.is-10--l { flex-basis: 83.33333%; }
  .grid > .grid-cell.is-11--l,
  .grid--with-gutter > .grid-cell.is-11--l { flex-basis: 91.66667%; }
  .grid > .grid-cell.is-12--l,
  .grid--with-gutter > .grid-cell.is-12--l { flex-basis: 100%; }
}


/* ─── Scoped Modifiers: Alignment & Layout Options This is wrong  ───────────────────────
var(--groundwork-signature-scope) .grid:has(> .grid-cell.grid--centered)   { justify-content: center; }
var(--groundwork-signature-scope) .grid:has(> .grid-cell.grid--between)    { justify-content: space-between; }
var(--groundwork-signature-scope) .grid:has(> .grid-cell.grid--middle)     { align-items: center; }
var(--groundwork-signature-scope) .grid:has(> .grid-cell.grid--stretch)    { align-items: stretch; }
var(--groundwork-signature-scope) .grid:has(> .grid-cell.grid--reverse)    { flex-direction: row-reverse; }
var(--groundwork-signature-scope) .grid:has(> .grid-cell.grid--stacked)    { flex-direction: column; }
var(--groundwork-signature-scope) .grid:has(> .grid-cell.grid--gap)        { gap: var(--grid-gutter); }
var(--groundwork-signature-scope) .grid:has(> .grid-cell.grid--equal) .grid-cell { align-self: stretch; } /*

/* Note: Runtime signature scope is handled in PHP */
