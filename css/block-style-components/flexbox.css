/**
 * @category ðŸ”² Layout
 * @description Provides flexbox utilities for controlling direction, alignment, justification, and wrapping of block content. Applies to the blockâ€™s content container (.field--name-body).
 * @order -1
 */

/**
 * @name .d-flex
 * @description Renders the block's content area as a block-level flex container.
 * @blockStyleComponent true
 */
.d-flex:not(.block),
.d-flex.block.grid-cell .block-style-target .field--name-body {
  display: flex;
}

/**
 * @name .d-flex-row
 * @description Positions flex items horizontally in a row (default).
 * @blockStyleComponent true
 */
.d-flex-row:not(.block),
.d-flex-row.block.grid-cell .block-style-target .field--name-body {
  flex-direction: row;
}

/**
 * @name .d-flex-col
 * @description Stacks flex items vertically in a column.
 * @blockStyleComponent true
 */
.d-flex-col:not(.block),
.d-flex-col.block.grid-cell .block-style-target .field--name-body {
  flex-direction: column;
}

/**
 * @name .d-flex-items-start
 * @description Aligns items to the start of the cross-axis.
 * @blockStyleComponent true
 */
.d-flex-items-start:not(.block),
.d-flex-items-start.block.grid-cell .block-style-target .field--name-body {
  align-items: flex-start;
}

/**
 * @name .d-flex-items-center
 * @description Aligns items to the center of the cross-axis.
 * @blockStyleComponent true
 */
.d-flex-items-center:not(.block),
.d-flex-items-center.block.grid-cell .block-style-target .field--name-body {
  align-items: center;
}

/**
 * @name .d-flex-items-end
 * @description Aligns items to the end of the cross-axis.
 * @blockStyleComponent true
 */
.d-flex-items-end:not(.block),
.d-flex-items-end.block.grid-cell .block-style-target .field--name-body {
  align-items: flex-end;
}

/**
 * @name .d-flex-justify-start
 * @description Justifies items to the start of the main-axis.
 * @blockStyleComponent true
 */
.d-flex-justify-start:not(.block),
.d-flex-justify-start.block.grid-cell .block-style-target .field--name-body {
  justify-content: flex-start;
}

/**
 * @name .d-flex-justify-center
 * @description Justifies items to the center of the main-axis.
 * @blockStyleComponent true
 */
.d-flex-justify-center:not(.block),
.d-flex-justify-center.block.grid-cell .block-style-target .field--name-body {
  justify-content: center;
}

/**
 * @name .d-flex-justify-end
 * @description Justifies items to the end of the main-axis.
 * @blockStyleComponent true
 */
.d-flex-justify-end:not(.block),
.d-flex-justify-end.block.grid-cell .block-style-target .field--name-body {
  justify-content: flex-end;
}

/**
 * @name .d-flex-justify-between
 * @description Distributes items evenly; first item is at the start, last at the end.
 * @blockStyleComponent true
 */
.d-flex-justify-between:not(.block),
.d-flex-justify-between.block.grid-cell .block-style-target .field--name-body {
  justify-content: space-between;
}

/**
 * @name .d-flex-wrap
 * @description Allows flex items to wrap onto multiple lines.
 * @blockStyleComponent true
 */
.d-flex-wrap:not(.block),
.d-flex-wrap.block.grid-cell .block-style-target .field--name-body {
  flex-wrap: wrap;
}

/**
 * @name .d-flex-nowrap
 * @description Prevents flex items from wrapping (default).
 * @blockStyleComponent true
 */
.d-flex-nowrap:not(.block),
.d-flex-nowrap.block.grid-cell .block-style-target .field--name-body {
  flex-wrap: nowrap;
}
